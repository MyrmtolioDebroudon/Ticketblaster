@page "/order/{OrderId:int}/success"
@using TicketBlaster.Shared.Models
@using Microsoft.JSInterop
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            }
            else if (order != null)
            {
                <div class="card text-center">
                    <div class="card-body">
                        <div class="mb-4">
                            <i class="fas fa-check-circle text-success" style="font-size: 4rem;"></i>
                        </div>
                        <h2 class="card-title">Payment Successful!</h2>
                        <p class="lead">Thank you for your purchase.</p>
                        
                        <div class="alert alert-success">
                            <strong>Order Number:</strong> @order.OrderNumber
                        </div>

                        <div class="my-4">
                            <h5>@order.Event.Title</h5>
                            <p>
                                <i class="fas fa-calendar"></i> @order.Event.StartDate.ToString("dddd, MMMM d, yyyy")<br />
                                <i class="fas fa-clock"></i> @order.Event.StartDate.ToString("h:mm tt")<br />
                                <i class="fas fa-map-marker-alt"></i> @order.Event.Location
                            </p>
                        </div>

                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Ticket Type</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in order.OrderItems)
                                    {
                                        <tr>
                                            <td>@item.TicketType.Name</td>
                                            <td>@item.Quantity</td>
                                            <td>@item.UnitPrice.ToString("C")</td>
                                            <td>@item.TotalPrice.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="3" class="text-end">Total Paid:</th>
                                        <th>@order.TotalAmount.ToString("C")</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <div class="alert alert-info mt-4">
                            <i class="fas fa-envelope"></i> A confirmation email has been sent to <strong>@order.CustomerEmail</strong> with your tickets.
                        </div>

                        <div class="d-grid gap-2 d-md-block mt-4">
                            <button class="btn btn-primary" @onclick="ViewTickets">
                                <i class="fas fa-ticket-alt"></i> View Tickets
                            </button>
                            <button class="btn btn-secondary" @onclick="GoToMyOrders">
                                <i class="fas fa-list"></i> My Orders
                            </button>
                            <button class="btn btn-outline-primary" @onclick="PrintReceipt">
                                <i class="fas fa-print"></i> Print Receipt
                            </button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning text-center">
                    <h4>Order not found</h4>
                    <p>We couldn't find the order you're looking for.</p>
                    <a href="/" class="btn btn-primary">Go to Home</a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int OrderId { get; set; }

    private Order? order;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync($"api/order/{OrderId}");
            if (response.IsSuccessStatusCode)
            {
                order = await response.Content.ReadFromJsonAsync<Order>();
                
                // Verify payment was successful
                if (order?.Status != OrderStatus.Completed)
                {
                    Navigation.NavigateTo($"/payment/{OrderId}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading order: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ViewTickets()
    {
        Navigation.NavigateTo($"/my-tickets/{OrderId}");
    }

    private void GoToMyOrders()
    {
        Navigation.NavigateTo("/my-orders");
    }

    private async Task PrintReceipt()
    {
        await JS.InvokeVoidAsync("window.print");
    }
}